@model PricePulse.ViewModels.CompetitorDiscoveryViewModel
@{
    ViewData["Title"] = "PricePulse - Competitors";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <link href="https://fonts.googleapis.com" rel="preconnect"/>
    <link crossorigin="" href="https://fonts.gstatic.com" rel="preconnect"/>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;900&amp;display=swap" rel="stylesheet"/>
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet"/>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        "primary": "#5d288a",
                        "accent": "#f94037",
                        "background-light": "#eff9f2",
                        "secondary-accent": "#0cb8ca"
                    },
                    fontFamily: {
                        "display": ["Inter", "sans-serif"]
                    },
                    borderRadius: {
                        "DEFAULT": "0.75rem",
                        "lg": "1rem",
                        "xl": "1.5rem",
                        "full": "9999px"
                    },
                },
            },
        }
    </script>
    <style>
        .material-symbols-outlined {
            font-variation-settings:
            'FILL' 0,
            'wght' 400,
            'GRAD' 0,
            'opsz' 24
        }
    </style>
</head>
<body class="bg-background-light font-display text-gray-800">
    @Html.AntiForgeryToken()
    <div class="flex h-screen overflow-hidden">
        <aside class="w-64 bg-white border-r border-gray-200 flex flex-col">
            <div class="p-6">
                <div class="flex items-center space-x-3 mb-8">
                    <img src="/images/logo.png" alt="PricePulse logo" class="logo" />
                </div>
                <nav class="space-y-2">
                    <a class="flex items-center space-x-3 px-4 py-3 text-sm font-medium rounded-lg text-gray-600 hover:bg-gray-100 hover:text-primary transition-colors" href="@Url.Action("Index", "Home")">
                        <span class="material-symbols-outlined">home</span>
                        <span>Home</span>
                    </a>
                    <a class="flex items-center space-x-3 px-4 py-3 text-sm font-medium rounded-lg bg-primary text-white shadow-lg shadow-primary/30" href="@Url.Action("Index", "Competitor")">
                        <span class="material-symbols-outlined">radar</span>
                        <span>Competitors</span>
                    </a>
                    <a class="flex items-center space-x-3 px-4 py-3 text-sm font-medium rounded-lg text-gray-600 hover:bg-gray-100 hover:text-primary transition-colors" href="@Url.Action("Index", "ProductDiscovery")">
                        <span class="material-symbols-outlined">inventory_2</span>
                        <span>Products</span>
                    </a>
                    
                </nav>
            </div>
        </aside>
        
        <main class="flex-1 flex flex-col overflow-y-auto">
            <div class="p-6 lg:p-8">
                <div class="max-w-7xl mx-auto">
                    
                </div>
                
                @if (TempData["Success"] != null)
                {
                    <div class="mt-6 p-4 bg-green-50 border border-green-200 rounded-lg text-green-700">
                        @TempData["Success"]
                    </div>
                }
                
                @if (TempData["Error"] != null)
                {
                    <div class="mt-6 p-4 bg-red-50 border border-red-200 rounded-lg text-red-700">
                        @TempData["Error"]
                    </div>
                }
                
                <div class="grid grid-cols-1 xl:grid-cols-3 gap-8">
                    <div class="xl:col-span-2 bg-white rounded-xl border border-gray-200 overflow-hidden flex flex-col">
                        <div class="p-6 border-b border-gray-200 flex justify-between items-center">
                            <h3 class="text-xl font-semibold text-gray-900">Competitors</h3>
                            <div class="flex items-center space-x-3">
                                @if (Model.DiscoveredCompetitors?.Any() == true)
                                {
                                    <div class="relative competitor-loader">
                                        <div class="bg-secondary-accent/10 text-secondary-accent px-4 py-1.5 rounded-full text-xs font-semibold flex items-center space-x-2">
                                            <span class="material-symbols-outlined text-sm animate-spin">autorenew</span>
                                            <span>Updating...</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="divide-y divide-gray-100 flex-1">
                            @if (Model.Competitors != null && Model.Competitors.Any())
                            {
                                @foreach (var competitor in Model.Competitors)
                                {
                                    <div class="p-6 flex items-center justify-between hover:bg-gray-50 transition-colors duration-200">
                                        <div class="flex items-center space-x-4">
                                            <div class="w-12 h-12 bg-gradient-to-br from-primary to-secondary-accent rounded-lg flex items-center justify-center">
                                                <span class="text-white font-bold text-lg">@(string.IsNullOrEmpty(competitor.Name) ? "??" : competitor.Name.Substring(0, Math.Min(2, competitor.Name.Length)).ToUpper())</span>
                                            </div>
                                            <div class="flex-1 cursor-pointer" onclick="viewCompetitorProfile(@competitor.CompetitorId)">
                                                <p class="font-semibold text-gray-900 hover:text-primary transition-colors">@(competitor.Name ?? "Unknown Competitor")</p>
                                                <p class="text-sm text-gray-500">@(competitor.Website ?? "No website")</p>
                                                @if (!string.IsNullOrEmpty(competitor.Notes))
                                                {
                                                    <p class="text-sm text-gray-500 mt-1">@competitor.Notes</p>
                                                }
                                            </div>
                                        </div>
                                        <div class="flex items-center space-x-2">
                                            <a href="@competitor.Website" target="_blank" class="text-gray-400 hover:text-primary transition-colors" title="Visit Website">
                                                <span class="material-symbols-outlined">open_in_new</span>
                                            </a>
                                            <form action="@Url.Action("DeleteCompetitor", "Competitor")" method="post" class="inline">
                                                <input type="hidden" name="website" value="@competitor.Website" />
                                                <button type="submit" class="text-gray-400 hover:text-red-500 transition-colors" title="Remove" onclick="return confirm('Are you sure you want to delete this competitor?')">
                                                    <span class="material-symbols-outlined">delete</span>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="p-6 text-center text-gray-500">
                                    No competitors added yet. Use the form on the right to add your first competitor.
                                </div>
                            }
                        </div>
                    </div>
                    
                    <div class="space-y-8">
                        <div class="bg-white rounded-xl border border-gray-200 p-6">
                            <h3 class="text-xl font-semibold text-gray-900 mb-4">Add Manually</h3>
                            <form class="space-y-4" id="addCompetitorForm">
                                <input class="w-full bg-gray-100 border-2 border-transparent rounded-lg py-3 px-4 focus:ring-0 focus:border-secondary-accent focus:shadow-input-focus transition-shadow duration-300" 
                                       placeholder="Enter website URL (e.g., apple.com or https://www.apple.com)" type="url" id="competitorWebsite" required/>
                                <p class="text-xs text-gray-500 mt-1">Enter a website URL only - no HTML code or other text</p>
                                <button type="submit" class="w-full bg-secondary-accent text-white px-6 py-3 rounded-lg font-bold hover:bg-secondary-accent/90 transition-transform transform hover:scale-105 shadow-lg shadow-secondary-accent/30 flex items-center justify-center space-x-2" id="addCompetitorBtn">
                                    <span class="material-symbols-outlined">add_circle</span>
                                    <span>Add Competitor</span>
                                </button>
                            </form>
                            <script>
                                document.addEventListener('DOMContentLoaded', function() {
                                    const form = document.getElementById('addCompetitorForm');
                                            const websiteInput = document.getElementById('competitorWebsite');
                                    const addBtn = document.getElementById('addCompetitorBtn');
                                    
                                    if (form && websiteInput) {
                                        // Add paste event listener to prevent HTML content
                                        websiteInput.addEventListener('paste', function(e) {
                                            setTimeout(() => {
                                                const value = this.value.trim();
                                                if (value.includes('<') || value.includes('>') || value.includes('href=') || value.includes('class=')) {
                                                    this.value = '';
                                                    alert('Please paste a valid website URL, not HTML code. Examples: apple.com or https://www.apple.com');
                                                }
                                            }, 10);
                                        });
                                        
                                        // Add input event listener for real-time validation
                                        websiteInput.addEventListener('input', function() {
                                            const value = this.value;
                                            if (value.includes('<') || value.includes('>')) {
                                                this.value = value.replace(/<[^>]*>/g, '');
                                            }
                                        });
                                        
                                        form.addEventListener('submit', async function(e) {
                                            e.preventDefault();
                                            
                                            // Validate input
                                            const website = websiteInput.value.trim();
                                            if (!website) {
                                                alert('Please enter a competitor website URL');
                                                websiteInput.focus();
                                                return false;
                                            }
                                            
                                            // Check for HTML tags or invalid content
                                            if (website.includes('<') || website.includes('>') || website.includes('href=') || website.includes('class=')) {
                                                alert('Please enter a valid website URL, not HTML code. Examples: apple.com or https://www.apple.com');
                                                websiteInput.focus();
                                                websiteInput.select();
                                                return false;
                                            }
                                            
                                            // Basic URL validation
                                            const urlPattern = /^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/i;
                                            if (!urlPattern.test(website)) {
                                                alert('Please enter a valid website URL. Examples: apple.com or https://www.apple.com');
                                                websiteInput.focus();
                                                websiteInput.select();
                                                return false;
                                            }
                                            
                                            // Extract domain name for the name field
                                            const domain = extractDomainName(website);
                                            const competitorName = domain || 'Unknown Competitor';
                                            
                                            // Disable button and show loading state
                                            addBtn.disabled = true;
                                            addBtn.innerHTML = '<span class="material-symbols-outlined animate-spin">autorenew</span><span>Adding...</span>';
                                            
                                            try {
                                                console.log('Starting competitor addition process...');
                                                
                                                // Prepare form data as URL-encoded string
                                                const formData = new URLSearchParams();
                                                formData.append('Domain', 'manual');
                                                formData.append('Competitors[0].Name', competitorName);
                                                formData.append('Competitors[0].Website', website);
                                                formData.append('Competitors[0].Notes', 'Manually added competitor');
                                                const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';
                                                formData.append('__RequestVerificationToken', token);
                                                
                                                console.log('Form data being sent:', formData.toString());
                                                console.log('Anti-forgery token:', token ? 'Present' : 'Missing');
                                                
                                                // Submit via AJAX
                                                const url = '@Url.Action("SaveManualCompetitors", "Competitor")';
                                                console.log('Submitting to URL:', url);
                                                
                                                const response = await fetch(url, {
                                                    method: 'POST',
                                                    body: formData,
                                                    headers: {
                                                        'X-Requested-With': 'XMLHttpRequest',
                                                        'Content-Type': 'application/x-www-form-urlencoded'
                                                    }
                                                });
                                                
                                                console.log('Response status:', response.status);
                                                console.log('Response headers:', response.headers.get('content-type'));
                                                
                                                if (response.ok) {
                                                    const contentType = response.headers.get('content-type');
                                                    console.log('Content-Type:', contentType);
                                                    
                                                    if (contentType && contentType.includes('application/json')) {
                                                        const result = await response.json();
                                                        console.log('Server response:', result);
                                                        
                                                        if (result.success) {
                                                            console.log('Server returned success, adding competitor to UI...');
                                                            console.log('Competitor details:', { name: competitorName, website: website, id: result.competitorId });
                                                            
                                                            // Success - add competitor to the list immediately
                                                            addCompetitorToList(competitorName, website, 'Manually added competitor', result.competitorId);
                                                            
                                                            // Clear form
                                                            websiteInput.value = '';
                                                            
                                                            // Show success message
                                                            showSuccessMessage(result.message || 'Competitor added successfully!');
                                                            
                                                            console.log('Competitor added successfully to UI');
                                                            
                                                            // Fallback: If the competitor doesn't appear in the list after 2 seconds, reload the page
                                                            setTimeout(() => {
                                                                const addedCompetitor = document.querySelector(`a[href="${website}"]`);
                                                                if (!addedCompetitor) {
                                                                    console.log('Competitor not found in DOM, reloading page as fallback');
                                                                    window.location.reload();
                                                                }
                                                            }, 2000);
                                                        } else {
                                                            console.error('Server returned error:', result.message);
                                                            alert(result.message || 'Error adding competitor. Please try again.');
                                                        }
                                                    } else {
                                                        // Server returned HTML instead of JSON
                                                        const htmlText = await response.text();
                                                        console.error('Server returned HTML instead of JSON:', htmlText.substring(0, 200));
                                                        alert('Server error: Received HTML instead of JSON response. Please refresh the page and try again.');
                                                    }
                                                } else {
                                                    // Handle error
                                                    const errorText = await response.text();
                                                    console.error('HTTP Error adding competitor:', response.status, errorText);
                                                    alert('Error adding competitor. Please try again.');
                                                }
                                            } catch (error) {
                                                console.error('Error:', error);
                                                alert('Error adding competitor. Please try again.');
                                                // Clear the input field on error
                                                websiteInput.value = '';
                                                websiteInput.focus();
                                            } finally {
                                                // Reset button
                                                addBtn.disabled = false;
                                                addBtn.innerHTML = '<span class="material-symbols-outlined">add_circle</span><span>Add Competitor</span>';
                                            }
                                        });
                                    }
                                    
                                    function extractDomainName(url) {
                                        if (!url) return '';
                                        
                                        let domain = url.trim();
                                        
                                        // Remove protocol
                                                if (domain.startsWith('http://') || domain.startsWith('https://')) {
                                                    domain = domain.replace(/^https?:\/\//, '');
                                                }
                                        
                                        // Remove www
                                                if (domain.startsWith('www.')) {
                                                    domain = domain.replace('www.', '');
                                                }
                                        
                                        // Remove path and query parameters
                                                domain = domain.split('/')[0];
                                        domain = domain.split('?')[0];
                                        
                                        return domain;
                                    }
                                    
                                    function addCompetitorToList(name, website, notes, competitorId) {
                                        console.log('Adding competitor to list:', { name, website, notes, competitorId });
                                        
                                        // Look for the competitors list container
                                        const competitorsList = document.querySelector('.divide-y.divide-gray-100.flex-1');
                                        console.log('Found competitors list:', competitorsList);
                                        
                                        if (!competitorsList) {
                                            console.log('No competitors list found, reloading page');
                                            // If no competitors list exists, reload the page
                                            setTimeout(() => {
                                                window.location.reload();
                                            }, 1000);
                                            return;
                                        }
                                        
                                        // Create new competitor element
                                        const competitorElement = document.createElement('div');
                                        competitorElement.className = 'p-6 flex items-center justify-between hover:bg-gray-50 transition-colors duration-200';
                                        competitorElement.innerHTML = `
                                            <div class="flex items-center space-x-4">
                                                <div class="w-12 h-12 bg-gradient-to-br from-primary to-secondary-accent rounded-lg flex items-center justify-center">
                                                    <span class="text-white font-bold text-lg">${name.substring(0, 2).toUpperCase()}</span>
                                                </div>
                                                <div class="flex-1 cursor-pointer" onclick="viewCompetitorProfile(${competitorId || 0})">
                                                    <p class="font-semibold text-gray-900 hover:text-primary transition-colors">${name}</p>
                                                    <p class="text-sm text-gray-500">${website}</p>
                                                    ${notes ? `<p class="text-sm text-gray-500 mt-1">${notes}</p>` : ''}
                                                </div>
                                            </div>
                                            <div class="flex items-center space-x-2">
                                                <a href="${website}" target="_blank" class="text-gray-400 hover:text-primary transition-colors" title="Visit Website">
                                                    <span class="material-symbols-outlined">open_in_new</span>
                                                </a>
                                                <form action="/Competitor/DeleteCompetitor" method="post" class="inline">
                                                    <input type="hidden" name="website" value="${website}">
                                                    <button type="submit" class="text-gray-400 hover:text-red-500 transition-colors" title="Remove" onclick="return confirm('Are you sure you want to delete this competitor?')">
                                                        <span class="material-symbols-outlined">delete</span>
                                                    </button>
                                                </form>
                                            </div>
                                        `;
                                        
                                        // Add to the beginning of the list
                                        competitorsList.insertBefore(competitorElement, competitorsList.firstChild);
                                        
                                        // Update empty state if it exists
                                        const emptyState = document.querySelector('.text-center.text-gray-500');
                                        console.log('Found empty state:', emptyState);
                                        if (emptyState) {
                                            console.log('Empty state text:', emptyState.textContent);
                                            if (emptyState.textContent.includes('No competitors added yet') || emptyState.textContent.includes('Use the form on the right')) {
                                                console.log('Hiding empty state');
                                                emptyState.style.display = 'none';
                                            }
                                        }
                                    }
                                    
                                    function showSuccessMessage(message) {
                                        // Create success message element
                                        const successDiv = document.createElement('div');
                                        successDiv.className = 'mb-6 p-4 bg-green-50 border border-green-200 rounded-lg text-green-700';
                                        successDiv.textContent = message;
                                        
                                        // Insert at the top of the main content
                                        const mainContent = document.querySelector('.max-w-7xl.mx-auto');
                                        if (mainContent) {
                                            mainContent.insertBefore(successDiv, mainContent.firstChild);
                                            
                                            // Remove after 5 seconds
                                            setTimeout(() => {
                                                successDiv.remove();
                                            }, 5000);
                                        }
                                    }
                                    
                                    function deleteCompetitor(website) {
                                        if (confirm('Are you sure you want to delete this competitor?')) {
                                            // Here you would implement the delete functionality
                                            // For now, just remove from the DOM
                                            const competitorElement = document.querySelector(`a[href="${website}"]`).closest('.p-6');
                                            if (competitorElement) {
                                                competitorElement.remove();
                                            }
                                        }
                                    }
                                });
                            </script>
                        </div>
                        
                        
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Loading Overlay -->
    <div class="fixed inset-0 bg-background-light/90 backdrop-blur-md z-[100] flex flex-col items-center justify-center text-center p-8 hidden" id="processingOverlay">
        <div class="bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full mx-4">
            <div class="flex items-center justify-center space-x-4 text-2xl font-bold text-primary mb-4">
                <div class="relative h-12 w-12">
                    <div class="absolute h-full w-full rounded-full bg-secondary-accent opacity-75 animate-ping"></div>
                    <div class="relative flex h-full w-full items-center justify-center rounded-full bg-secondary-accent">
                        <span class="material-symbols-outlined text-white text-2xl">add_circle</span>
                    </div>
                </div>
                <span id="loadingTitle">Adding Competitor...</span>
            </div>
            <p id="loadingDescription" class="text-gray-600 mb-6">Saving competitor information to your database.</p>
            <div class="w-full bg-gray-200 rounded-full h-3 overflow-hidden">
                <div id="progressBar" class="bg-gradient-to-r from-secondary-accent to-primary h-3 rounded-full transition-all duration-500 ease-out" style="width: 0%"></div>
            </div>
            <div id="progressText" class="mt-3 text-sm font-medium text-gray-500">Processing... 0%</div>
        </div>
    </div>

    <script>
        function showLoadingOverlay(title, description) {
            const processingOverlay = document.getElementById('processingOverlay');
            const titleElement = document.getElementById('loadingTitle');
            const descriptionElement = document.getElementById('loadingDescription');
            const progressBar = document.getElementById('progressBar');
            const progressText = document.getElementById('progressText');
            
            if (titleElement) titleElement.textContent = title;
            if (descriptionElement) descriptionElement.textContent = description;
            
            processingOverlay.classList.remove('hidden');
            
            // Reset progress
            let progress = 0;
            if (progressBar) progressBar.style.width = '0%';
            if (progressText) progressText.textContent = 'Initializing... 0%';
            
            // Simulate progress
            const progressInterval = setInterval(() => {
                progress += Math.random() * 20;
                if (progress > 95) progress = 95;
                
                if (progressBar) progressBar.style.width = progress + '%';
                if (progressText) progressText.textContent = `Processing... ${Math.round(progress)}%`;
            }, 200);
            
            // Clear interval after 3 seconds (form should have submitted by then)
            setTimeout(() => {
                clearInterval(progressInterval);
            }, 3000);
        }

        function viewCompetitorProfile(competitorId) {
            window.location.href = '@Url.Action("Profile", "Competitor")' + '?id=' + competitorId;
        }

        document.addEventListener('DOMContentLoaded', function() {
            // Additional initialization if needed
        });
    </script>
</body>
</html>