@model PricePulse.ViewModels.CompetitorDiscoveryViewModel
@{
    ViewData["Title"] = "PricePulse - Competitor Discovery";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <link href="https://fonts.googleapis.com" rel="preconnect"/>
    <link crossorigin="" href="https://fonts.gstatic.com" rel="preconnect"/>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;900&amp;display=swap" rel="stylesheet"/>
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet"/>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        "primary": "#5d288a",
                        "accent": "#f94037",
                        "background-light": "#eff9f2",
                        "secondary-accent": "#0cb8ca"
                    },
                    fontFamily: {
                        "display": ["Inter", "sans-serif"]
                    },
                    borderRadius: {
                        "DEFAULT": "0.75rem",
                        "lg": "1rem",
                        "xl": "1.5rem",
                        "full": "9999px"
                    },
                },
            },
        }
    </script>
    <style>
        .material-symbols-outlined {
            font-variation-settings:
            'FILL' 0,
            'wght' 400,
            'GRAD' 0,
            'opsz' 24
        }
    </style>
</head>
<body class="bg-background-light font-display text-gray-800">
    <div class="flex h-screen overflow-hidden">
        <aside class="w-64 bg-white border-r border-gray-200 flex flex-col">
            <div class="p-6">
                <div class="flex items-center space-x-3 mb-8">
                    <img src="/images/logo.png" alt="PricePulse logo" class="h-10 w-10" />
                    <h1 class="text-2xl font-bold text-gray-900">PricePulse</h1>
                </div>
                <nav class="space-y-2">
                    <a class="flex items-center space-x-3 px-4 py-3 text-sm font-medium rounded-lg text-gray-600 hover:bg-gray-100 hover:text-primary transition-colors" href="@Url.Action("Index", "Home")">
                        <span class="material-symbols-outlined">home</span>
                        <span>Home</span>
                    </a>
                    <a class="flex items-center space-x-3 px-4 py-3 text-sm font-medium rounded-lg bg-primary text-white shadow-lg shadow-primary/30" href="@Url.Action("Index", "Competitor")">
                        <span class="material-symbols-outlined">radar</span>
                        <span>Competitors</span>
                    </a>
                    <a class="flex items-center space-x-3 px-4 py-3 text-sm font-medium rounded-lg text-gray-600 hover:bg-gray-100 hover:text-primary transition-colors" href="@Url.Action("Index", "ProductDiscovery")">
                        <span class="material-symbols-outlined">inventory_2</span>
                        <span>Products</span>
                    </a>
                    
                </nav>
            </div>
        </aside>
        
        <main class="flex-1 flex flex-col overflow-y-auto">
            <div class="p-6 lg:p-8">
                <div class="max-w-7xl mx-auto">
                    
                </div>
                
                @if (TempData["Success"] != null)
                {
                    <div class="mt-6 p-4 bg-green-50 border border-green-200 rounded-lg text-green-700">
                        @TempData["Success"]
                    </div>
                }
                
                @if (TempData["Error"] != null)
                {
                    <div class="mt-6 p-4 bg-red-50 border border-red-200 rounded-lg text-red-700">
                        @TempData["Error"]
                    </div>
                }
                
                <div class="grid grid-cols-1 xl:grid-cols-3 gap-8">
                    <div class="xl:col-span-2 bg-white rounded-xl border border-gray-200 overflow-hidden flex flex-col">
                        <div class="p-6 border-b border-gray-200 flex justify-between items-center">
                            <h3 class="text-xl font-semibold text-gray-900">Competitors</h3>
                            <div class="flex items-center space-x-3">
                                @if (Model.DiscoveredCompetitors?.Any() == true)
                                {
                                    <div class="relative competitor-loader">
                                        <div class="bg-secondary-accent/10 text-secondary-accent px-4 py-1.5 rounded-full text-xs font-semibold flex items-center space-x-2">
                                            <span class="material-symbols-outlined text-sm animate-spin">autorenew</span>
                                            <span>Updating...</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="divide-y divide-gray-100 flex-1">
                            @if (Model.Competitors != null && Model.Competitors.Any())
                            {
                                @foreach (var competitor in Model.Competitors)
                                {
                                    <div class="p-6 flex items-center justify-between hover:bg-gray-50 transition-colors duration-200">
                                        <div class="flex items-center space-x-4">
                                            <div class="w-12 h-12 bg-gradient-to-br from-primary to-secondary-accent rounded-lg flex items-center justify-center">
                                                <span class="text-white font-bold text-lg">@(string.IsNullOrEmpty(competitor.Name) ? "??" : competitor.Name.Substring(0, Math.Min(2, competitor.Name.Length)).ToUpper())</span>
                                            </div>
                                            <div>
                                                <p class="font-semibold text-gray-900">@(competitor.Name ?? "Unknown Competitor")</p>
                                                <p class="text-sm text-gray-500">@(competitor.Website ?? "No website")</p>
                                                @if (!string.IsNullOrEmpty(competitor.Notes))
                                                {
                                                    <p class="text-sm text-gray-500 mt-1">@competitor.Notes</p>
                                                }
                                            </div>
                                        </div>
                                        <div class="flex items-center space-x-2">
                                            <a href="@competitor.Website" target="_blank" class="text-gray-400 hover:text-primary transition-colors" title="Visit Website">
                                                <span class="material-symbols-outlined">open_in_new</span>
                                            </a>
                                            <form action="@Url.Action("DeleteCompetitor", "Competitor")" method="post" class="inline">
                                                <input type="hidden" name="website" value="@competitor.Website" />
                                                <button type="submit" class="text-gray-400 hover:text-red-500 transition-colors" title="Remove" onclick="return confirm('Are you sure you want to delete this competitor?')">
                                                    <span class="material-symbols-outlined">delete</span>
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="p-6 text-center text-gray-500">
                                    No competitors added yet. Use the form on the right to add your first competitor.
                                </div>
                            }
                        </div>
                    </div>
                    
                    <div class="space-y-8">
                        <div class="bg-white rounded-xl border border-gray-200 p-6">
                            <h3 class="text-xl font-semibold text-gray-900 mb-4">Add Manually</h3>
                            <form action="@Url.Action("SaveManualCompetitors", "Competitor")" method="post" class="space-y-4">
                                <input type="hidden" name="Domain" value="@Model.Domain" />
                                <input type="hidden" name="Competitors[0].Name" value="" id="competitorName" />
                                <input type="hidden" name="Competitors[0].Notes" value="" />
                                <input class="w-full bg-gray-100 border-2 border-transparent rounded-lg py-3 px-4 focus:ring-0 focus:border-secondary-accent focus:shadow-input-focus transition-shadow duration-300" 
                                       placeholder="competitor-domain.com" type="text" name="Competitors[0].Website" id="competitorWebsite"/>
                                <button type="submit" class="w-full bg-secondary-accent text-white px-6 py-3 rounded-lg font-bold hover:bg-secondary-accent/90 transition-transform transform hover:scale-105 shadow-lg shadow-secondary-accent/30 flex items-center justify-center space-x-2">
                                    <span class="material-symbols-outlined">add_circle</span>
                                    <span>Add Competitor</span>
                                </button>
                            </form>
                            <script>
                                document.addEventListener('DOMContentLoaded', function() {
                                    const form = document.querySelector('form[action*="SaveManualCompetitors"]');
                                    if (form) {
                                        form.addEventListener('submit', function(e) {
                                            const websiteInput = document.getElementById('competitorWebsite');
                                            const nameInput = document.getElementById('competitorName');
                                            
                                            if (websiteInput && nameInput) {
                                                // Extract domain name from website URL for the name
                                                let domain = websiteInput.value.trim();
                                                console.log('Original domain:', domain);
                                                
                                                if (domain.startsWith('http://') || domain.startsWith('https://')) {
                                                    domain = domain.replace(/^https?:\/\//, '');
                                                }
                                                if (domain.startsWith('www.')) {
                                                    domain = domain.replace('www.', '');
                                                }
                                                domain = domain.split('/')[0];
                                                
                                                console.log('Extracted name:', domain);
                                                nameInput.value = domain;
                                                console.log('Name input value set to:', nameInput.value);
                                            } else {
                                                console.error('Could not find website or name input elements');
                                            }
                                        });
                                    } else {
                                        console.error('Could not find form with SaveManualCompetitors action');
                                    }
                                });
                            </script>
                        </div>
                        
                        
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        document.getElementById('competitorDiscoveryForm').addEventListener('submit', function() {
            const button = this.querySelector('button[type="submit"]');
            const originalText = button.innerHTML;
            button.innerHTML = '<span class="material-symbols-outlined animate-spin">autorenew</span><span>Processing...</span>';
            button.disabled = true;
            
            // Re-enable after 5 seconds (form should have submitted by then)
            setTimeout(() => {
                button.innerHTML = originalText;
                button.disabled = false;
            }, 5000);
        });
    </script>
</body>
</html>