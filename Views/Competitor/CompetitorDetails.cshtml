@model PricePulse.ViewModels.CompetitorDetailsViewModel
@{
    ViewData["Title"] = $"PricePulse - {Model.CompetitorDomain} Products";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com?plugins=forms,container-queries"></script>
    <link href="https://fonts.googleapis.com" rel="preconnect"/>
    <link crossorigin="" href="https://fonts.gstatic.com" rel="preconnect"/>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;900&amp;display=swap" rel="stylesheet"/>
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet"/>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        "primary": "#5d288a",
                        "accent": "#f94037",
                        "background-light": "#eff9f2",
                        "secondary-accent": "#0cb8ca"
                    },
                    fontFamily: {
                        "display": ["Inter", "sans-serif"]
                    },
                    borderRadius: {
                        "DEFAULT": "0.75rem",
                        "lg": "1rem",
                        "xl": "1.5rem",
                        "full": "9999px"
                    },
                },
            },
        }
    </script>
    <style>
        .material-symbols-outlined {
            font-variation-settings:
            'FILL' 0,
            'wght' 400,
            'GRAD' 0,
            'opsz' 24
        }
    </style>
</head>
<body class="bg-background-light font-display text-gray-800">
    <div class="flex min-h-screen">
        <aside class="w-64 bg-white border-r border-gray-200/80 flex flex-col shadow-sm">
            <div class="p-6">
                <div class="flex items-center space-x-3 mb-8">
                    <img src="/images/logo.png" alt="PricePulse logo" class="h-10 w-10" />
                    <h1 class="text-2xl font-bold text-gray-900">PricePulse</h1>
                </div>
                <nav class="space-y-2">
                    <a class="flex items-center gap-3 px-4 py-3 rounded-lg text-gray-600 hover:bg-primary/5 hover:text-primary transition-all duration-200" href="@Url.Action("Index", "Dashboard")">
                        <span class="material-symbols-outlined">dashboard</span>
                        <span class="font-medium">Dashboard</span>
                    </a>
                    <a class="flex items-center gap-3 px-4 py-3 rounded-lg text-gray-600 hover:bg-primary/5 hover:text-primary transition-all duration-200" href="@Url.Action("Index", "ProductDiscovery")">
                        <span class="material-symbols-outlined">inventory_2</span>
                        <span class="font-medium">Products</span>
                    </a>
                    <a class="flex items-center gap-3 px-4 py-3 rounded-lg bg-primary text-white font-bold shadow-md shadow-primary/30" href="@Url.Action("Index", "Competitor")">
                        <span class="material-symbols-outlined">groups</span>
                        <span class="font-medium">Competitors</span>
                    </a>
                    <a class="flex items-center gap-3 px-4 py-3 rounded-lg text-gray-600 hover:bg-primary/5 hover:text-primary transition-all duration-200" href="@Url.Action("Index", "ProductDiscovery")">
                        <span class="material-symbols-outlined">bar_chart</span>
                        <span class="font-medium">Reports</span>
                    </a>
                </nav>
            </div>
            <div class="p-6 border-t border-gray-200">
                <div class="flex items-center space-x-4">
                    <div>
                        <p class="font-semibold text-sm">@(User?.Identity?.Name ?? "User")</p>
                        <p class="text-xs text-gray-500">@(User?.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value ?? "user@example.com")</p>
                    </div>
                </div>
            </div>
        </aside>
        
        <main class="flex-1 p-8">
            <div class="flex items-center space-x-2 text-sm text-gray-500 mb-8">
                <a class="hover:text-primary" href="@Url.Action("Index", "Competitor")">Competitors</a>
                <span>/</span>
                <span class="font-semibold text-gray-900">@Model.CompetitorDomain</span>
            </div>
            
            <div class="flex justify-between items-start mb-8">
                <div>
                    <h2 class="text-5xl font-extrabold text-gray-900">@Model.CompetitorDomain</h2>
                    <p class="text-base text-gray-500 mt-2">Last updated @DateTime.Now.ToString("MMM dd, yyyy")</p>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="@Url.Action("List", "Competitor")" class="bg-gray-200 text-gray-800 px-4 py-2 rounded-lg font-semibold hover:bg-gray-300 transition-colors flex items-center space-x-2">
                        <span class="material-symbols-outlined">arrow_back</span>
                        <span>Back to Competitors</span>
                    </a>
                    <form action="@Url.Action("AnalyzeSingleCompetitor", "Competitor")" method="post" class="inline">
                        <input type="hidden" name="competitorDomain" value="@Model.CompetitorDomain" />
                        <button type="submit" class="bg-accent text-white px-6 py-2 rounded-lg font-semibold hover:bg-accent/90 transition-colors flex items-center space-x-2">
                            <span class="material-symbols-outlined">refresh</span>
                            <span>Re-analyze</span>
                        </button>
                    </form>
                </div>
            </div>
            
            @if (TempData["Success"] != null)
            {
                <div class="mb-6 p-4 bg-green-50 border border-green-200 rounded-lg text-green-700">
                    @TempData["Success"]
                </div>
            }
            
            @if (TempData["Error"] != null)
            {
                <div class="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg text-red-700">
                    @TempData["Error"]
                </div>
            }
            
            @if (Model.AnalysisResult.Success)
            {
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                    <div class="bg-white rounded-xl p-6 border border-gray-200 shadow-sm">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Total Products</p>
                                <p class="text-3xl font-bold text-primary">@Model.AnalysisResult.TotalProducts</p>
                            </div>
                            <div class="h-12 w-12 bg-primary/10 rounded-lg flex items-center justify-center">
                                <span class="material-symbols-outlined text-primary text-2xl">inventory_2</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="bg-white rounded-xl p-6 border border-gray-200 shadow-sm">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">With Prices</p>
                                <p class="text-3xl font-bold text-green-600">@Model.AnalysisResult.ProductsWithPrices</p>
                            </div>
                            <div class="h-12 w-12 bg-green-100 rounded-lg flex items-center justify-center">
                                <span class="material-symbols-outlined text-green-600 text-2xl">attach_money</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="bg-white rounded-xl p-6 border border-gray-200 shadow-sm">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Average Price</p>
                                <p class="text-3xl font-bold text-blue-600">@(Model.AnalysisResult.AveragePrice?.ToString("C") ?? "N/A")</p>
                            </div>
                            <div class="h-12 w-12 bg-blue-100 rounded-lg flex items-center justify-center">
                                <span class="material-symbols-outlined text-blue-600 text-2xl">trending_up</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="bg-white rounded-xl p-6 border border-gray-200 shadow-sm">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Analysis Time</p>
                                <p class="text-3xl font-bold text-orange-600">@Model.AnalysisResult.AnalysisTime ms</p>
                            </div>
                            <div class="h-12 w-12 bg-orange-100 rounded-lg flex items-center justify-center">
                                <span class="material-symbols-outlined text-orange-600 text-2xl">schedule</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                @if (Model.Products?.Any() == true)
                {
                    <div class="bg-white rounded-xl border border-gray-200 overflow-hidden">
                        <div class="p-6 border-b border-gray-200">
                            <h3 class="text-xl font-semibold text-gray-900">Product Listings</h3>
                        </div>
                        <div class="overflow-x-auto">
                            <table class="min-w-full divide-y divide-gray-200">
                                <thead class="bg-gray-50">
                                    <tr>
                                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Product</th>
                                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Price</th>
                                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Competitor Prices</th>
                                        <th class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                    </tr>
                                </thead>
                                <tbody class="bg-white divide-y divide-gray-200">
                                    @foreach (var product in Model.Products)
                                    {
                                        <tr class="hover:bg-gray-50 transition-colors">
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                <div class="flex items-center">
                                                    <img alt="Product image" class="h-12 w-12 rounded-lg mr-4" src="https://via.placeholder.com/48x48/5d288a/ffffff?text=@Uri.EscapeDataString(product.ProductName.Substring(0, Math.Min(2, product.ProductName.Length)).ToUpper())"/>
                                                    <div>
                                                        <p class="text-sm font-medium text-gray-900">@product.ProductName</p>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                @if (product.OurPrice.HasValue)
                                                {
                                                    <span class="text-lg font-bold text-green-600">$@product.OurPrice.Value.ToString("F2")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-gray-400">No price found</span>
                                                }
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap">
                                                @if (product.CompetitorPrices?.Any() == true)
                                                {
                                                    <div class="space-y-1">
                                                        @foreach (var competitorPrice in product.CompetitorPrices.Take(3))
                                                        {
                                                            <div class="flex items-center justify-between text-sm">
                                                                <span class="text-gray-600">@competitorPrice.RetailerName:</span>
                                                                @if (competitorPrice.Price.HasValue)
                                                                {
                                                                    @if (!string.IsNullOrEmpty(competitorPrice.Url))
                                                                    {
                                                                        <a href="@competitorPrice.Url" target="_blank" class="text-sm text-primary hover:text-accent transition-colors break-all font-medium">
                                                                            @competitorPrice.Price.Value.ToString("C")
                                                                        </a>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="font-medium text-gray-900">@competitorPrice.Price.Value.ToString("C")</span>
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-gray-400">N/A</span>
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <span class="text-gray-400">No competitor prices</span>
                                                }
                                            </td>
                                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                                <div class="flex items-center space-x-2">
                                                    <a href="https://@Model.CompetitorDomain" target="_blank" class="text-gray-400 hover:text-primary transition-colors" title="Visit Website">
                                                        <span class="material-symbols-outlined">open_in_new</span>
                                                    </a>
                                                    <button onclick="analyzeProduct('@product.ProductName')" class="text-gray-400 hover:text-accent transition-colors" title="Analyze Product">
                                                        <span class="material-symbols-outlined">search</span>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                else
                {
                    <div class="text-center py-20">
                        <div class="h-24 w-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6">
                            <span class="material-symbols-outlined text-4xl text-gray-400">inventory_2</span>
                        </div>
                        <h3 class="text-2xl font-bold text-gray-900 mb-4">No Products Found</h3>
                        <p class="text-gray-600 mb-8">No products were discovered for this competitor</p>
                        <form action="@Url.Action("AnalyzeSingleCompetitor", "Competitor")" method="post">
                            <input type="hidden" name="competitorDomain" value="@Model.CompetitorDomain" />
                            <button type="submit" class="bg-primary text-white px-8 py-3 rounded-lg font-semibold hover:bg-primary/90 transition-colors inline-flex items-center space-x-2">
                                <span class="material-symbols-outlined">refresh</span>
                                <span>Try Again</span>
                            </button>
                        </form>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-20">
                    <div class="h-24 w-24 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-6">
                        <span class="material-symbols-outlined text-4xl text-red-500">error</span>
                    </div>
                    <h3 class="text-2xl font-bold text-red-600 mb-4">Analysis Failed</h3>
                    <p class="text-gray-600 mb-8">@Model.AnalysisResult.ErrorMessage</p>
                    <form action="@Url.Action("AnalyzeSingleCompetitor", "Competitor")" method="post">
                        <input type="hidden" name="competitorDomain" value="@Model.CompetitorDomain" />
                        <button type="submit" class="bg-primary text-white px-8 py-3 rounded-lg font-semibold hover:bg-primary/90 transition-colors inline-flex items-center space-x-2">
                            <span class="material-symbols-outlined">refresh</span>
                            <span>Try Again</span>
                        </button>
                    </form>
                </div>
            }
        </main>
    </div>

    <script>
        function analyzeProduct(productName) {
            window.location.href = `@Url.Action("Index", "ProductDiscovery")?productName=${encodeURIComponent(productName)}&competitorDomain=@Model.CompetitorDomain`;
        }
    </script>
</body>
</html>